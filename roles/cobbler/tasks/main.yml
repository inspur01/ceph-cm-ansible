---
- include: ipmi_secrets.yml
  tags:
    - always

- name: Include cobbler keys.
  include_vars: "{{ secrets_path | mandatory }}/cobbler_keys.yml"
  no_log: true
  tags:
    - vars

- name: Create /root/.ssh
  file:
    path: /root/.ssh
    mode: '700'
    state: directory

- name: Write cobbler keys
  copy:
    content: "{{ item.data }}"
    dest: "{{ item.path }}"
    mode: '600'
  with_items: "{{ cobbler_keys[ansible_hostname] }}"
  no_log: true

- name: Include package type specific vars.
  include_vars: "{{ ansible_pkg_mgr }}_systems.yml"
  tags:
    - always

- include: yum_systems.yml
  when: ansible_pkg_mgr == "yum"

- include: apt_systems.yml
  when: ansible_pkg_mgr == "apt"

- include: pip.yml
  tags:
    - pip

- name: Start cobbler
  service:
    name: "{{ cobbler_service }}"
    state: started
    enabled: yes

- name: Enable tftpd
  lineinfile:
    dest: /etc/xinetd.d/tftp
    regexp: disable
    line: "        disable                 = no"
  when: ansible_pkg_mgr == "yum"
  register: tftp_enabled
  tags:
    - tftp

- name: Reload xinetd
  service:
    name: xinetd
    state: reloaded
    enabled: yes
  when: tftp_enabled is defined and tftp_enabled|changed
  tags:
    - tftp

- name: Start httpd
  service:
    name: "{{ httpd_service }}"
    state: started
    enabled: yes

- name: Update settings
  include: settings.yml
  tags:
    - settings

- include: fetch_cm_repos.yml
  tags:
   - cm_repos

- include: upload_templates.yml
  tags:
    - templates

- include: distro_prep.yml
  tags:
    - distros
    - distro_prep

- include: restart.yml

- name: Run cobbler check
  command: cobbler check
